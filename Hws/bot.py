import praw
import random
import time
import datetime

# this is the login information for our bot
username='emolyandmatolda'
password='Emmy646'
client_id='0xYrv9mLQixeBg'
client_secret='gupVZAcCZHyB2woYEiI07O6cKao'
user_agent='Comp40EB'

# connect to reddit 
reddit = praw.Reddit(
    client_id=client_id,
    client_secret=client_secret,
    user_agent=user_agent,
    username=username,
    password=password,
    )


len_sub=0
for submission in reddit.subreddit('csci040').hot():
    len_sub+=1
    #print('title=', submission.title)

i = 0
# in an infinite loop, we will look for comment in the post that we can reply to
while True:
    for submission in reddit.subreddit('csci040').hot():
        i+=1
        top_level_comments = list(submission.comments)
        authors = []
        for comment in top_level_comments:
            authors.append(comment.author)

        #checking to see if my bot has made a top-level comment and if not, creating one if there
        # is a top level comment then my bot replies to someone elses comment

        if 'emolyandmatolda' not in authors:
            top_level = False
        if 'emolyandmatolda'  in authors:
            top_level = True

        #Generating some words to post
        pattern='<NOUN> has <ADJECTIVE> <ADJECTIVE1> <NOUN2> for <USA>! <NOUN> is clearly the <ADJECTIVE2> <NOUN3> <HASHTAG>!!! (bEeP BoOp i A bOt)'
        noun=['Bernie','Sanders','Bern']
        adjective=['very', 'many', 'several', 'a lot of']
        adjective1=['intellegent','smart','well thought out']
        noun2=['ideas','plans', 'aspirations']
        usa= ['the US', 'the United States', 'America']
        adjective2=['best', 'smartest','greatest']
        noun3=['candidate', 'choice', 'option for us']
        hashtag=['#feelthebern', '#bernie2020', '#berniesanders']
        import random
        result = pattern.replace('<NOUN>',random.choice(noun))
        result = result.replace('<ADJECTIVE>',random.choice(adjective))
        result = result.replace('<ADJECTIVE1>',random.choice(adjective1))
        result = result.replace('<NOUN2>',random.choice(noun2))
        result = result.replace('<USA>',random.choice(usa))
        result = result.replace('<NOUN>',random.choice(noun))
        result = result.replace('<ADJECTIVE2>',random.choice(adjective2))
        result = result.replace('<NOUN3>',random.choice(noun3))
        result = result.replace('<HASHTAG>',random.choice(hashtag))
        text=result
        #print('text=',text)

        try:
            if top_level == False:
                submission.reply(text) #posting top level comment
        except:
            print('error occured')    

        print()
        print('new iteration at:',datetime.datetime.now())
       
       #looking at all comments
        all_comments= submission.comments.list()
        print('len(all_comments)=',len(all_comments))

        #deleting comments generated by my bot
        not_my_comments=[]
        for comment in all_comments:
            redditor = comment.author
            if redditor != 'emolyandmatolda':
                not_my_comments.append(comment) 
        print('len(not_my_comments)=',len(not_my_comments))

    # FIXME (task 4): filter the list to also remove comments that you've already replied to
        comments_without_replies=[]
        for comment in not_my_comments:
            authors = []
            for reply in comment.replies:
                authors.append(reply.author)
            if 'emolyandmatolda' not in authors:
                comments_without_replies.append(comment)
        print('len(comments_without_replies)=',len(comments_without_replies))

    # FIXME (task 5): randomly select one of the comments that we haven't replied to yet
    # HINT: There is a function in python's random module for doing this.
    # See the documentation at https://docs.python.org/3/library/random.html
        comment = random.choice(comments_without_replies)
        try:
            if top_level == True:
                comment.reply(text)
        except:
            print('error occured')
    #print('got to end')

    # sleep for 10-15 minutes so that you don't overload reddit (WHERE SHOULD THIS GO) 
    print('times run=', i)
    time.sleep(10*60+random.randrange(5*60))
    



